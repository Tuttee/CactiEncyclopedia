spring.application.name=CactiEncyclopedia
# MVC Config
spring.mvc.hiddenmethod.filter.enabled=true

# Base configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/cacti_encyclopedia?createDatabaseIfNotExist=true
spring.datasource.username=${MYSQL_USER:}
spring.datasource.password=${MYSQL_PASS:}
logging.level.org.hibernate.persister.entity=ERROR

#Disable thymeleaf caching so that the server must not be reloaded
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=file:src/main/resources/templates/
spring.web.resources.static-locations=file:src/main/resources/static/
spring.web.resources.cache.period=0

facts-svc.base-url=http://localhost:8081/api/v1/facts
#facts-svc.failure-message.clear-history=Facts service is temporary down! Please try again later!

#Kafka broker running location
spring.kafka.bootstrap-servers=localhost:9092

#JSON Serializer (for sending)
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#JSON Deserializer (for receiving)
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=cacti-encyclopedia-group

#Import data.sql
#spring.sql.init.mode=always
#spring.security.client.name=tk123
#spring.security.client.password=123123